<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junrui.mapper.GraphEntityMapper">
  <resultMap id="BaseResultMap" type="junrui.model.GraphEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="entity_id" jdbcType="INTEGER" property="entityId" />
    <result column="key" jdbcType="VARCHAR" property="key" />
    <result column="value" jdbcType="LONGVARCHAR" property="value" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from graph_entity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="junrui.model.GraphEntity">
    insert into graph_entity (id, entity_id, `key`,
      `value`)
    values (#{id,jdbcType=INTEGER}, #{entityId,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, 
      #{value,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="junrui.model.GraphEntity">
    update graph_entity
    set entity_id = #{entityId,jdbcType=INTEGER},
      `key` = #{key,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, entity_id, `key`, `value`
    from graph_entity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, entity_id, `key`, `value`
    from graph_entity
  </select>
  <select id="selectByClassAndValue" resultType="int">
    select entity_id
    from graph_entity
    where `key` = #{key}
    and `value` like "%${value}%"
    and entity_id in (select entity_id from graph_entity where `key` = "class" and `value` = #{className})
  </select>
  <select id="selectByEntityIds" resultType="GraphEntity">
    select id, entity_id, `key`, `value`
    from graph_entity
    where entity_id in
    <foreach collection="collection" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>
</mapper>