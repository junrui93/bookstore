<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junrui.mapper.EntityMapper">
	<select id="selectedAttributes" resultType="Publication">
		select publ.id, title, pt.name as type
		from publication publ
		left join publ_type pt on pt.id = publ.type_id
		limit 5
	</select>
	<select id="selectAllPersons" resultType="Person">
		select id, type, name
		from person
		limit 5
	</select>
	<select id="selectVenues" resultType="Venue">
		select id, name
		from venue
		limit 5
	</select>
	<select id="selectLink" resultType="PublPerson">
		select pub.id as publId, pp.person_id as personId, p.id as author
		from publ_person pp  
		left join publication pub on pub.id = pp.publ_id
		left join person p on p.id = pp.person_id
		limit 25
	</select>
	<select id="selectByPubId" resultType="Publication">
		select id, venue_id as venueId, venue
		from publication
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultType="Graph">
		select subject as nodeFrom, predicate as nodeEdge, object as nodeTo
		from graph_store
		order by subject
	</select>
	<select id="graphSearch" resultType="Graph">
		select gs.subject as nodeFrom, gs.predicate nodeEdge, gs.object as nodeTo
		from entity_store es
		join graph_store gs on gs.subject = es.subject
		where es.object like '%${keyword}%'
	</select>
	<select id="selectTitle" resultType="Graph">
		select es.object as title
		from entity_store es
		left join graph_store gs on gs.subject = es.subject
		where gs.subject = #{nodeFrom,jdbcType=VARCHAR}
		and es.predicate = 'Title'
		group by es.object
	</select>
	
	
	<delete id="deleteAll" parameterType="java.lang.Integer">
    	delete from graph_store
 	</delete>
	
	<insert id="insertPub" parameterType="junrui.model.Entity">
		insert into entity_store (subject, predicate, object)
		values
		(#{entityId,jdbcType=VARCHAR}, #{entityAttribute,jdbcType=VARCHAR}, #{attributeValue,jdbcType=VARCHAR})
	</insert>
	<insert id="insertPerson" parameterType="junrui.model.Entity">
		insert into entity_store (subject, predicate, object)
		values
		(#{personEntityId,jdbcType=VARCHAR}, #{entityAttribute,jdbcType=VARCHAR}, #{personAttrValueType,jdbcType=VARCHAR})
	</insert>
	<insert id="insertVenue" parameterType="junrui.model.Entity">
		insert into entity_store (subject, predicate, object)
		values
		(#{venueEntityId,jdbcType=VARCHAR}, #{entityAttribute,jdbcType=VARCHAR}, #{attributeValue,jdbcType=VARCHAR})
	</insert>
	<insert id="insertEdge" parameterType="junrui.model.Entity">
		insert into entity_store (subject, predicate, object)
		values
		(#{edgeEntityId,jdbcType=VARCHAR}, #{entityAttribute,jdbcType=VARCHAR}, #{attributeValue,jdbcType=VARCHAR})
	</insert>
	<insert id="insertGraph" parameterType="junrui.model.Graph">
		insert into graph_store (subject, predicate, object)
		values
		(#{nodeFrom,jdbcType=VARCHAR}, #{nodeEdge,jdbcType=VARCHAR}, #{nodeTo,jdbcType=VARCHAR})
	</insert>
	
</mapper>