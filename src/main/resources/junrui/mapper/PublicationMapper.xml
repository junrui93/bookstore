<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junrui.mapper.PublicationMapper">
  <resultMap id="BaseResultMap" type="junrui.model.Publication">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
    <result column="venue_id" jdbcType="INTEGER" property="venueId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="venue" jdbcType="VARCHAR" property="venue" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="removed" jdbcType="TINYINT" property="removed" />
    <result column="image_path" jdbcType="LONGVARCHAR" property="imagePath" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <resultMap id="publResultMap" type="junrui.model.Publication">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="type" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="venue" jdbcType="VARCHAR" property="venue" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="removed" jdbcType="TINYINT" property="removed" />
    <result column="image_path" jdbcType="LONGVARCHAR" property="imagePath" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="seller_id" property="sellerId" />
    <association property="seller" resultMap="junrui.mapper.UserMapper.BaseResultMap" columnPrefix="seller_" />
    <collection property="authors" ofType="Person" columnPrefix="author_" resultMap="junrui.mapper.PersonMapper.BaseResultMap" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from publication
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="junrui.model.Publication" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    insert into publication (id, type_id, title, 
      venue, year, price, 
      removed, image_path, description,
      venue_id, seller_id
      )
    values (#{id,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{venue,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{removed,jdbcType=TINYINT}, #{imagePath,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR},
      #{venueId,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="junrui.model.Publication">
    update publication
    set type_id = #{typeId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      venue = #{venue,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      removed = #{removed,jdbcType=TINYINT},
      image_path = #{imagePath,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.id, type_id, title, venue, year, price, removed, image_path, description, pt.name as type,
           seller_id, venue_id
    from publication p
    left join publ_type pt on pt.id = p.type_id
    where p.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultType="Publication">
    select p.id, type_id, title, venue, year, price, removed, image_path, description, t.name as type, venue_id
    from publication p
    left join publ_type t on t.id = p.type_id
  </select>
  <select id="selectByKeyword" resultMap="publResultMap">
    select
      p2.id, type_id, title, venue, year, price, removed, image_path, description, p2.type,
      pe.id as author_id, pe.name as author_name
    from (
      select p.id, type_id, title, venue, year, price, removed, image_path, description, pt.name as type
      from publication p
      left join publ_type pt on pt.id = p.type_id
      where (title like '%${keyword}%'
      or venue like '%${keyword}%'
      or year = #{keyword}
      or description like '%${keyword}%'
      or pt.name = #{keyword}
      or p.id in (
        select pp.`publ_id`
        from person pe
        left join publ_person pp on pp.`person_id` = pe.id
        where pe.name like '%${keyword}%'
        and pe.type = 0
      ))
      <if test="removed != null">
        and removed = #{removed}
      </if>
      limit #{offset}, #{limit}
    ) p2
    left join publ_person pp on pp.publ_id = p2.id
    left join person pe on pe.id = pp.person_id
  </select>
  <select id="countByKeyword" resultType="int">
    select count(*)
    from publication p
    left join publ_type pt on pt.id = p.type_id
    where (title like '%${keyword}%'
    or venue like '%${keyword}%'
    or year = #{keyword}
    or description like '%${keyword}%'
    or pt.name = #{keyword}
    or p.id in (
      select pp.`publ_id`
      from person pe
      left join publ_person pp on pp.`person_id` = pe.id
      where pe.name like '%${keyword}%'
      and pe.type = 0
    ))
    <if test="removed != null">
      and removed = #{removed}
    </if>
  </select>
  <select id="selectByCondition" resultMap="publResultMap">
    select
      p2.id, type_id, title, venue, year, price, removed, image_path, description, p2.type,
      pe.id as author_id, pe.name as author_name
    from (
      select p.id, type_id, title, venue, year, price, removed, image_path, description, pt.name as type
      from publication p
      left join publ_type pt on pt.id = p.type_id
      <where>
        <if test="condition.title != null">title like '%${condition.title}%'</if>
        <if test="condition.venue != null">and venue like '%${condition.venue}%'</if>
        <if test="condition.yearfrom != null and condition.yearto != null">
          and year between ${condition.yearfrom} and ${condition.yearto}
        </if>
        <if test="condition.type != null">
          and
          <foreach collection="condition.type" index="index" item="item" open="(" separator=" or " close=")">
            pt.name = #{item}
          </foreach>
        </if>
        <if test="condition.author != null">
          and p.id in (
          select pp.`publ_id`
            from person pe
            left join publ_person pp on pp.`person_id` = pe.id
            where pe.name like '%${condition.author}%'
            and pe.type = 0
          )
        </if>
        and removed = 0
      </where>
      limit #{offset}, #{limit}
    ) p2
    left join publ_person pp on pp.publ_id = p2.id
    left join person pe on pe.id = pp.person_id
  </select>
  <select id="countByCondition" resultType="int">
    select count(*)
    from publication p
    left join publ_type pt on pt.id = p.type_id
    <where>
      <if test="condition.title != null">title like '%${condition.title}%'</if>
      <if test="condition.venue != null">and venue like '%${condition.venue}%'</if>
      <if test="condition.yearfrom != null and condition.yearto != null">
        and year between ${condition.yearfrom} and ${condition.yearto}
      </if>
      <if test="condition.type != null">
        and
        <foreach collection="condition.type" index="index" item="item" open="(" separator=" or " close=")">
          pt.name = #{item}
        </foreach>
      </if>
      <if test="condition.author != null">
        and p.id in (
        select pp.`publ_id`
        from person pe
        left join publ_person pp on pp.`person_id` = pe.id
        where pe.name like '%${condition.author}%'
        and pe.type = 0
        )
      </if>
      and removed = 0
    </where>
  </select>
  <select id="selectBySellerId" resultMap="publResultMap">
    select p.id, type_id, title, venue, year, price, removed, image_path, description, pt.name as type
    from publication p
    left join publ_type pt on pt.id = p.type_id
    where seller_id = #{sellerId}
    and removed = #{removed}
    limit #{offset}, #{limit}
  </select>
  <select id="countBySellerId" resultType="int">
    select count(*)
    from publication
    where seller_id = #{sellerId}
    and removed = #{removed}
  </select>
  <update id="updateRemovedById">
    update publication
    set removed = #{removed}
    where id = #{id}
  </update>
  <select id="selectAllIds" resultType="int">
    select id
    from publication
    where removed = 0
  </select>
  <select id="selectByIds" resultMap="publResultMap">
    select p.id, type_id, title, venue, year, price, removed, image_path, description, pt.name as type,
    pe.id as author_id, pe.name as author_name
    from publication p
    left join publ_type pt on pt.id = p.type_id
    left join publ_person pp on pp.publ_id = p.id
    left join person pe on pe.id = pp.person_id
    <where>
      and pe.type = 0
      and p.id in
        <foreach item="item" index="index" collection="collection"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
    </where>
  </select>
  <select id="selectExample" resultType="Publication">
    select p.id, title, t.name as type
    from publication p
    left join publ_type t on t.id = p.type_id
    limit 1
  </select>
</mapper>
