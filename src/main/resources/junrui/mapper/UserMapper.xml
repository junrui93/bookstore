<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="junrui.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="junrui.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="birth_year" jdbcType="INTEGER" property="birthYear" />
    <result column="credit_card" jdbcType="VARCHAR" property="creditCard" />
    <result column="banned" jdbcType="TINYINT" property="banned" />
    <result column="address" jdbcType="LONGVARCHAR" property="address" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="junrui.model.User" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into user (id, type, username, 
      password, email, nickname, 
      first_name, last_name, birth_year, 
      credit_card, banned, address
      )
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{birthYear,jdbcType=INTEGER}, 
      #{creditCard,jdbcType=VARCHAR}, #{banned,jdbcType=TINYINT}, #{address,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="junrui.model.User">
    update user
    set
    <if test="password != null">
      password = #{password,jdbcType=VARCHAR},
    </if>
      email = #{email,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      birth_year = #{birthYear,jdbcType=INTEGER},
      credit_card = #{creditCard,jdbcType=VARCHAR},
      banned = #{banned,jdbcType=TINYINT},
      address = #{address,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, type, username, password, email, nickname, first_name, last_name, birth_year, 
    credit_card, banned, address
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, type, username, password, email, nickname, first_name, last_name, birth_year, 
    credit_card, banned, address
    from user
  </select>
  <select id="selectByUsername" resultType="User">
    select id, type, username, password, email, nickname, first_name, last_name, birth_year,
    credit_card, banned, address
    from user
    where username = #{username}
    limit 1
  </select>
  <select id="selectByType" resultType="User">
    select id, type, username, password, email, nickname, first_name, last_name, birth_year,
            credit_card, banned, address
    from user
    where type = #{type}
  </select>
  <update id="updateBannedById">
    update user
    set banned = #{banned}
    where id = #{userId}
  </update>
</mapper>